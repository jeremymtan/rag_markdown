name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: install packages
        run: make install
      
      - name: lint
        run: make lint
        continue-on-error: true
      
      - name: format
        run: make format
        continue-on-error: true
      
      - name: Set up Ollama
        run: |
          curl -fsSL https://ollama.ai/install.sh | sudo -E sh
          ollama serve &
          sleep 10
          ollama pull mistral
      
      - name: Create environment file
        run: |
          echo "COHERE_API_KEY=${{ secrets.COHERE_API_KEY }}" >> .env
          echo "QDRANT_URL=${{ secrets.QDRANT_URL }}" >> .env
          echo "QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> .env
          echo "OLLAMA_MODEL=mistral" >> .env
          echo "COLLECTION_NAME=tako_docs_ci" >> .env
          echo "CHUNK_SIZE=1000" >> .env
          echo "CHUNK_OVERLAP=200" >> .env
      
      - name: Collect documentation data
        run: python data/data.py
        continue-on-error: true
      
      - name: Ingest documents
        run: python ingest.py
        continue-on-error: true
      
      - name: evaluate
        run: make evaluate
        continue-on-error: true
      
      - name: Upload results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ragas-evaluation
          path: ragas_evaluation_*.csv